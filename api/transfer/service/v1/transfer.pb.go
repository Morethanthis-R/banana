// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: transfer.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Symbols defined in public import of google/protobuf/timestamp.proto.

type Timestamp = timestamppb.Timestamp

type ReqWithDrawFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fid []int32 `protobuf:"varint,1,rep,packed,name=fid,proto3" json:"fid,omitempty"`
}

func (x *ReqWithDrawFile) Reset() {
	*x = ReqWithDrawFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transfer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqWithDrawFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqWithDrawFile) ProtoMessage() {}

func (x *ReqWithDrawFile) ProtoReflect() protoreflect.Message {
	mi := &file_transfer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqWithDrawFile.ProtoReflect.Descriptor instead.
func (*ReqWithDrawFile) Descriptor() ([]byte, []int) {
	return file_transfer_proto_rawDescGZIP(), []int{0}
}

func (x *ReqWithDrawFile) GetFid() []int32 {
	if x != nil {
		return x.Fid
	}
	return nil
}

type ReqWithDrawDir struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Did []int32 `protobuf:"varint,2,rep,packed,name=did,proto3" json:"did,omitempty"`
}

func (x *ReqWithDrawDir) Reset() {
	*x = ReqWithDrawDir{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transfer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqWithDrawDir) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqWithDrawDir) ProtoMessage() {}

func (x *ReqWithDrawDir) ProtoReflect() protoreflect.Message {
	mi := &file_transfer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqWithDrawDir.ProtoReflect.Descriptor instead.
func (*ReqWithDrawDir) Descriptor() ([]byte, []int) {
	return file_transfer_proto_rawDescGZIP(), []int{1}
}

func (x *ReqWithDrawDir) GetDid() []int32 {
	if x != nil {
		return x.Did
	}
	return nil
}

type RespWithDraw struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status  bool   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RespWithDraw) Reset() {
	*x = RespWithDraw{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transfer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespWithDraw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespWithDraw) ProtoMessage() {}

func (x *RespWithDraw) ProtoReflect() protoreflect.Message {
	mi := &file_transfer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespWithDraw.ProtoReflect.Descriptor instead.
func (*RespWithDraw) Descriptor() ([]byte, []int) {
	return file_transfer_proto_rawDescGZIP(), []int{2}
}

func (x *RespWithDraw) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RespWithDraw) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type ReqCleanTrashFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fid []int32 `protobuf:"varint,1,rep,packed,name=fid,proto3" json:"fid,omitempty"`
}

func (x *ReqCleanTrashFile) Reset() {
	*x = ReqCleanTrashFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transfer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCleanTrashFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCleanTrashFile) ProtoMessage() {}

func (x *ReqCleanTrashFile) ProtoReflect() protoreflect.Message {
	mi := &file_transfer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCleanTrashFile.ProtoReflect.Descriptor instead.
func (*ReqCleanTrashFile) Descriptor() ([]byte, []int) {
	return file_transfer_proto_rawDescGZIP(), []int{3}
}

func (x *ReqCleanTrashFile) GetFid() []int32 {
	if x != nil {
		return x.Fid
	}
	return nil
}

type RespCleanTrash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status  bool   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RespCleanTrash) Reset() {
	*x = RespCleanTrash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transfer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespCleanTrash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespCleanTrash) ProtoMessage() {}

func (x *RespCleanTrash) ProtoReflect() protoreflect.Message {
	mi := &file_transfer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespCleanTrash.ProtoReflect.Descriptor instead.
func (*RespCleanTrash) Descriptor() ([]byte, []int) {
	return file_transfer_proto_rawDescGZIP(), []int{4}
}

func (x *RespCleanTrash) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RespCleanTrash) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type ReqCleanTrashDir struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Did []int32 `protobuf:"varint,1,rep,packed,name=did,proto3" json:"did,omitempty"`
}

func (x *ReqCleanTrashDir) Reset() {
	*x = ReqCleanTrashDir{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transfer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCleanTrashDir) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCleanTrashDir) ProtoMessage() {}

func (x *ReqCleanTrashDir) ProtoReflect() protoreflect.Message {
	mi := &file_transfer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCleanTrashDir.ProtoReflect.Descriptor instead.
func (*ReqCleanTrashDir) Descriptor() ([]byte, []int) {
	return file_transfer_proto_rawDescGZIP(), []int{5}
}

func (x *ReqCleanTrashDir) GetDid() []int32 {
	if x != nil {
		return x.Did
	}
	return nil
}

type ReqSearchFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyword string `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
}

func (x *ReqSearchFile) Reset() {
	*x = ReqSearchFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transfer_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSearchFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSearchFile) ProtoMessage() {}

func (x *ReqSearchFile) ProtoReflect() protoreflect.Message {
	mi := &file_transfer_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSearchFile.ProtoReflect.Descriptor instead.
func (*ReqSearchFile) Descriptor() ([]byte, []int) {
	return file_transfer_proto_rawDescGZIP(), []int{6}
}

func (x *ReqSearchFile) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

type RespSearchFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Status  bool   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RespSearchFile) Reset() {
	*x = RespSearchFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transfer_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespSearchFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespSearchFile) ProtoMessage() {}

func (x *RespSearchFile) ProtoReflect() protoreflect.Message {
	mi := &file_transfer_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespSearchFile.ProtoReflect.Descriptor instead.
func (*RespSearchFile) Descriptor() ([]byte, []int) {
	return file_transfer_proto_rawDescGZIP(), []int{7}
}

func (x *RespSearchFile) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RespSearchFile) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type FileRatio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Audio int32 `protobuf:"varint,1,opt,name=audio,proto3" json:"audio,omitempty"`
	Video int32 `protobuf:"varint,2,opt,name=video,proto3" json:"video,omitempty"`
	Image int32 `protobuf:"varint,3,opt,name=image,proto3" json:"image,omitempty"`
	Doc   int32 `protobuf:"varint,4,opt,name=doc,proto3" json:"doc,omitempty"`
	Other int32 `protobuf:"varint,5,opt,name=other,proto3" json:"other,omitempty"`
}

func (x *FileRatio) Reset() {
	*x = FileRatio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transfer_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileRatio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileRatio) ProtoMessage() {}

func (x *FileRatio) ProtoReflect() protoreflect.Message {
	mi := &file_transfer_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileRatio.ProtoReflect.Descriptor instead.
func (*FileRatio) Descriptor() ([]byte, []int) {
	return file_transfer_proto_rawDescGZIP(), []int{8}
}

func (x *FileRatio) GetAudio() int32 {
	if x != nil {
		return x.Audio
	}
	return 0
}

func (x *FileRatio) GetVideo() int32 {
	if x != nil {
		return x.Video
	}
	return 0
}

func (x *FileRatio) GetImage() int32 {
	if x != nil {
		return x.Image
	}
	return 0
}

func (x *FileRatio) GetDoc() int32 {
	if x != nil {
		return x.Doc
	}
	return 0
}

func (x *FileRatio) GetOther() int32 {
	if x != nil {
		return x.Other
	}
	return 0
}

type DownloadCensus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName string `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	Count    int32  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *DownloadCensus) Reset() {
	*x = DownloadCensus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transfer_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadCensus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadCensus) ProtoMessage() {}

func (x *DownloadCensus) ProtoReflect() protoreflect.Message {
	mi := &file_transfer_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadCensus.ProtoReflect.Descriptor instead.
func (*DownloadCensus) Descriptor() ([]byte, []int) {
	return file_transfer_proto_rawDescGZIP(), []int{9}
}

func (x *DownloadCensus) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *DownloadCensus) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type Usage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UseStr string  `protobuf:"bytes,1,opt,name=use_str,json=useStr,proto3" json:"use_str,omitempty"`
	Used   float32 `protobuf:"fixed32,2,opt,name=used,proto3" json:"used,omitempty"`
}

func (x *Usage) Reset() {
	*x = Usage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transfer_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Usage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Usage) ProtoMessage() {}

func (x *Usage) ProtoReflect() protoreflect.Message {
	mi := &file_transfer_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Usage.ProtoReflect.Descriptor instead.
func (*Usage) Descriptor() ([]byte, []int) {
	return file_transfer_proto_rawDescGZIP(), []int{10}
}

func (x *Usage) GetUseStr() string {
	if x != nil {
		return x.UseStr
	}
	return ""
}

func (x *Usage) GetUsed() float32 {
	if x != nil {
		return x.Used
	}
	return 0
}

type ReqFileCensus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReqFileCensus) Reset() {
	*x = ReqFileCensus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transfer_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqFileCensus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFileCensus) ProtoMessage() {}

func (x *ReqFileCensus) ProtoReflect() protoreflect.Message {
	mi := &file_transfer_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFileCensus.ProtoReflect.Descriptor instead.
func (*ReqFileCensus) Descriptor() ([]byte, []int) {
	return file_transfer_proto_rawDescGZIP(), []int{11}
}

type RespFileCensus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Usage     *Usage            `protobuf:"bytes,1,opt,name=usage,proto3" json:"usage,omitempty"`
	FileRatio *FileRatio        `protobuf:"bytes,3,opt,name=file_ratio,json=fileRatio,proto3" json:"file_ratio,omitempty"`
	TopTen    []*DownloadCensus `protobuf:"bytes,4,rep,name=top_ten,json=topTen,proto3" json:"top_ten,omitempty"` //若没有文件则返回空结构体
}

func (x *RespFileCensus) Reset() {
	*x = RespFileCensus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transfer_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespFileCensus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespFileCensus) ProtoMessage() {}

func (x *RespFileCensus) ProtoReflect() protoreflect.Message {
	mi := &file_transfer_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespFileCensus.ProtoReflect.Descriptor instead.
func (*RespFileCensus) Descriptor() ([]byte, []int) {
	return file_transfer_proto_rawDescGZIP(), []int{12}
}

func (x *RespFileCensus) GetUsage() *Usage {
	if x != nil {
		return x.Usage
	}
	return nil
}

func (x *RespFileCensus) GetFileRatio() *FileRatio {
	if x != nil {
		return x.FileRatio
	}
	return nil
}

func (x *RespFileCensus) GetTopTen() []*DownloadCensus {
	if x != nil {
		return x.TopTen
	}
	return nil
}

type ReqShareFileStr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fid int32 `protobuf:"varint,1,opt,name=fid,proto3" json:"fid,omitempty"`
}

func (x *ReqShareFileStr) Reset() {
	*x = ReqShareFileStr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transfer_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqShareFileStr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqShareFileStr) ProtoMessage() {}

func (x *ReqShareFileStr) ProtoReflect() protoreflect.Message {
	mi := &file_transfer_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqShareFileStr.ProtoReflect.Descriptor instead.
func (*ReqShareFileStr) Descriptor() ([]byte, []int) {
	return file_transfer_proto_rawDescGZIP(), []int{13}
}

func (x *ReqShareFileStr) GetFid() int32 {
	if x != nil {
		return x.Fid
	}
	return 0
}

type RespShareFileStr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fid       int32  `protobuf:"varint,1,opt,name=fid,proto3" json:"fid,omitempty"`
	Share_Str string `protobuf:"bytes,2,opt,name=share_Str,json=shareStr,proto3" json:"share_Str,omitempty"`
}

func (x *RespShareFileStr) Reset() {
	*x = RespShareFileStr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transfer_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespShareFileStr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespShareFileStr) ProtoMessage() {}

func (x *RespShareFileStr) ProtoReflect() protoreflect.Message {
	mi := &file_transfer_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespShareFileStr.ProtoReflect.Descriptor instead.
func (*RespShareFileStr) Descriptor() ([]byte, []int) {
	return file_transfer_proto_rawDescGZIP(), []int{14}
}

func (x *RespShareFileStr) GetFid() int32 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *RespShareFileStr) GetShare_Str() string {
	if x != nil {
		return x.Share_Str
	}
	return ""
}

type ReqPreviewFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fid int32 `protobuf:"varint,1,opt,name=fid,proto3" json:"fid,omitempty"`
}

func (x *ReqPreviewFile) Reset() {
	*x = ReqPreviewFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transfer_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqPreviewFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqPreviewFile) ProtoMessage() {}

func (x *ReqPreviewFile) ProtoReflect() protoreflect.Message {
	mi := &file_transfer_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqPreviewFile.ProtoReflect.Descriptor instead.
func (*ReqPreviewFile) Descriptor() ([]byte, []int) {
	return file_transfer_proto_rawDescGZIP(), []int{15}
}

func (x *ReqPreviewFile) GetFid() int32 {
	if x != nil {
		return x.Fid
	}
	return 0
}

type RespPreviewFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PreviewStr string `protobuf:"bytes,1,opt,name=preview_str,json=previewStr,proto3" json:"preview_str,omitempty"`
}

func (x *RespPreviewFile) Reset() {
	*x = RespPreviewFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transfer_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespPreviewFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespPreviewFile) ProtoMessage() {}

func (x *RespPreviewFile) ProtoReflect() protoreflect.Message {
	mi := &file_transfer_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespPreviewFile.ProtoReflect.Descriptor instead.
func (*RespPreviewFile) Descriptor() ([]byte, []int) {
	return file_transfer_proto_rawDescGZIP(), []int{16}
}

func (x *RespPreviewFile) GetPreviewStr() string {
	if x != nil {
		return x.PreviewStr
	}
	return ""
}

type File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename    string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	ContentType string `protobuf:"bytes,2,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	FileHash    string `protobuf:"bytes,3,opt,name=fileHash,proto3" json:"fileHash,omitempty"`
}

func (x *File) Reset() {
	*x = File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transfer_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_transfer_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_transfer_proto_rawDescGZIP(), []int{17}
}

func (x *File) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *File) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *File) GetFileHash() string {
	if x != nil {
		return x.FileHash
	}
	return ""
}

type ReqUpload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File      *File  `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Directory string `protobuf:"bytes,2,opt,name=directory,proto3" json:"directory,omitempty"` //默认根目录  为"" 增加路径填写 /xxx/xxx
}

func (x *ReqUpload) Reset() {
	*x = ReqUpload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transfer_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUpload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUpload) ProtoMessage() {}

func (x *ReqUpload) ProtoReflect() protoreflect.Message {
	mi := &file_transfer_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUpload.ProtoReflect.Descriptor instead.
func (*ReqUpload) Descriptor() ([]byte, []int) {
	return file_transfer_proto_rawDescGZIP(), []int{18}
}

func (x *ReqUpload) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *ReqUpload) GetDirectory() string {
	if x != nil {
		return x.Directory
	}
	return ""
}

type RespUpload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fid int32 `protobuf:"varint,1,opt,name=fid,proto3" json:"fid,omitempty"`
}

func (x *RespUpload) Reset() {
	*x = RespUpload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transfer_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespUpload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespUpload) ProtoMessage() {}

func (x *RespUpload) ProtoReflect() protoreflect.Message {
	mi := &file_transfer_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespUpload.ProtoReflect.Descriptor instead.
func (*RespUpload) Descriptor() ([]byte, []int) {
	return file_transfer_proto_rawDescGZIP(), []int{19}
}

func (x *RespUpload) GetFid() int32 {
	if x != nil {
		return x.Fid
	}
	return 0
}

type ReqDownload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fid int32 `protobuf:"varint,1,opt,name=fid,proto3" json:"fid,omitempty"`
}

func (x *ReqDownload) Reset() {
	*x = ReqDownload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transfer_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqDownload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqDownload) ProtoMessage() {}

func (x *ReqDownload) ProtoReflect() protoreflect.Message {
	mi := &file_transfer_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqDownload.ProtoReflect.Descriptor instead.
func (*ReqDownload) Descriptor() ([]byte, []int) {
	return file_transfer_proto_rawDescGZIP(), []int{20}
}

func (x *ReqDownload) GetFid() int32 {
	if x != nil {
		return x.Fid
	}
	return 0
}

type RespDownload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Status   bool   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Message  string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RespDownload) Reset() {
	*x = RespDownload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transfer_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespDownload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespDownload) ProtoMessage() {}

func (x *RespDownload) ProtoReflect() protoreflect.Message {
	mi := &file_transfer_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespDownload.ProtoReflect.Descriptor instead.
func (*RespDownload) Descriptor() ([]byte, []int) {
	return file_transfer_proto_rawDescGZIP(), []int{21}
}

func (x *RespDownload) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *RespDownload) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *RespDownload) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ReqStatic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename    string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	ContentType string `protobuf:"bytes,2,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
}

func (x *ReqStatic) Reset() {
	*x = ReqStatic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transfer_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqStatic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqStatic) ProtoMessage() {}

func (x *ReqStatic) ProtoReflect() protoreflect.Message {
	mi := &file_transfer_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqStatic.ProtoReflect.Descriptor instead.
func (*ReqStatic) Descriptor() ([]byte, []int) {
	return file_transfer_proto_rawDescGZIP(), []int{22}
}

func (x *ReqStatic) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *ReqStatic) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

type RespStatic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileAddress string `protobuf:"bytes,1,opt,name=file_address,json=fileAddress,proto3" json:"file_address,omitempty"`
}

func (x *RespStatic) Reset() {
	*x = RespStatic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transfer_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespStatic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespStatic) ProtoMessage() {}

func (x *RespStatic) ProtoReflect() protoreflect.Message {
	mi := &file_transfer_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespStatic.ProtoReflect.Descriptor instead.
func (*RespStatic) Descriptor() ([]byte, []int) {
	return file_transfer_proto_rawDescGZIP(), []int{23}
}

func (x *RespStatic) GetFileAddress() string {
	if x != nil {
		return x.FileAddress
	}
	return ""
}

type ReqGetUserFileTree struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SortObject  int32  `protobuf:"varint,1,opt,name=sort_object,json=sortObject,proto3" json:"sort_object,omitempty"` //0:默认排序 1:文件名长短 2:编辑时间 4:文件大小
	SortType    int32  `protobuf:"varint,2,opt,name=sort_type,json=sortType,proto3" json:"sort_type,omitempty"`       //0:系统默认 1:asc升序  2:desc降序
	Keywords    string `protobuf:"bytes,3,opt,name=keywords,proto3" json:"keywords,omitempty"`                        //搜索关键字
	DirectoryId int32  `protobuf:"varint,4,opt,name=directory_id,json=directoryId,proto3" json:"directory_id,omitempty"`
}

func (x *ReqGetUserFileTree) Reset() {
	*x = ReqGetUserFileTree{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transfer_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetUserFileTree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetUserFileTree) ProtoMessage() {}

func (x *ReqGetUserFileTree) ProtoReflect() protoreflect.Message {
	mi := &file_transfer_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetUserFileTree.ProtoReflect.Descriptor instead.
func (*ReqGetUserFileTree) Descriptor() ([]byte, []int) {
	return file_transfer_proto_rawDescGZIP(), []int{24}
}

func (x *ReqGetUserFileTree) GetSortObject() int32 {
	if x != nil {
		return x.SortObject
	}
	return 0
}

func (x *ReqGetUserFileTree) GetSortType() int32 {
	if x != nil {
		return x.SortType
	}
	return 0
}

func (x *ReqGetUserFileTree) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *ReqGetUserFileTree) GetDirectoryId() int32 {
	if x != nil {
		return x.DirectoryId
	}
	return 0
}

type FileMetaObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fid          int32  `protobuf:"varint,1,opt,name=fid,proto3" json:"fid,omitempty"`
	Size         string `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	FileName     string `protobuf:"bytes,3,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	FileType     string `protobuf:"bytes,4,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`
	LastModified int64  `protobuf:"varint,5,opt,name=last_modified,json=lastModified,proto3" json:"last_modified,omitempty"`
}

func (x *FileMetaObject) Reset() {
	*x = FileMetaObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transfer_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileMetaObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMetaObject) ProtoMessage() {}

func (x *FileMetaObject) ProtoReflect() protoreflect.Message {
	mi := &file_transfer_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMetaObject.ProtoReflect.Descriptor instead.
func (*FileMetaObject) Descriptor() ([]byte, []int) {
	return file_transfer_proto_rawDescGZIP(), []int{25}
}

func (x *FileMetaObject) GetFid() int32 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *FileMetaObject) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *FileMetaObject) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FileMetaObject) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *FileMetaObject) GetLastModified() int64 {
	if x != nil {
		return x.LastModified
	}
	return 0
}

type DirMetaObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Did          int32  `protobuf:"varint,1,opt,name=did,proto3" json:"did,omitempty"`
	Size         string `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	DirName      string `protobuf:"bytes,3,opt,name=dir_name,json=dirName,proto3" json:"dir_name,omitempty"`
	LastModified int64  `protobuf:"varint,5,opt,name=last_modified,json=lastModified,proto3" json:"last_modified,omitempty"`
}

func (x *DirMetaObject) Reset() {
	*x = DirMetaObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transfer_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirMetaObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirMetaObject) ProtoMessage() {}

func (x *DirMetaObject) ProtoReflect() protoreflect.Message {
	mi := &file_transfer_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirMetaObject.ProtoReflect.Descriptor instead.
func (*DirMetaObject) Descriptor() ([]byte, []int) {
	return file_transfer_proto_rawDescGZIP(), []int{26}
}

func (x *DirMetaObject) GetDid() int32 {
	if x != nil {
		return x.Did
	}
	return 0
}

func (x *DirMetaObject) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *DirMetaObject) GetDirName() string {
	if x != nil {
		return x.DirName
	}
	return ""
}

func (x *DirMetaObject) GetLastModified() int64 {
	if x != nil {
		return x.LastModified
	}
	return 0
}

type RespGetUserFileTree struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     int32             `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Total      int32             `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	FileObject []*FileMetaObject `protobuf:"bytes,3,rep,name=file_object,json=fileObject,proto3" json:"file_object,omitempty"`
	DirObject  []*DirMetaObject  `protobuf:"bytes,4,rep,name=dir_object,json=dirObject,proto3" json:"dir_object,omitempty"`
}

func (x *RespGetUserFileTree) Reset() {
	*x = RespGetUserFileTree{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transfer_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespGetUserFileTree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespGetUserFileTree) ProtoMessage() {}

func (x *RespGetUserFileTree) ProtoReflect() protoreflect.Message {
	mi := &file_transfer_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespGetUserFileTree.ProtoReflect.Descriptor instead.
func (*RespGetUserFileTree) Descriptor() ([]byte, []int) {
	return file_transfer_proto_rawDescGZIP(), []int{27}
}

func (x *RespGetUserFileTree) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RespGetUserFileTree) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *RespGetUserFileTree) GetFileObject() []*FileMetaObject {
	if x != nil {
		return x.FileObject
	}
	return nil
}

func (x *RespGetUserFileTree) GetDirObject() []*DirMetaObject {
	if x != nil {
		return x.DirObject
	}
	return nil
}

type ReqGetUserTrashBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SortObject int32 `protobuf:"varint,1,opt,name=sort_object,json=sortObject,proto3" json:"sort_object,omitempty"` //0:默认排序 1:文件名长短 2:编辑时间 4:文件大小
	SortType   int32 `protobuf:"varint,2,opt,name=sort_type,json=sortType,proto3" json:"sort_type,omitempty"`       //0:系统默认 1:asc升序  2:desc降序
}

func (x *ReqGetUserTrashBin) Reset() {
	*x = ReqGetUserTrashBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transfer_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetUserTrashBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetUserTrashBin) ProtoMessage() {}

func (x *ReqGetUserTrashBin) ProtoReflect() protoreflect.Message {
	mi := &file_transfer_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetUserTrashBin.ProtoReflect.Descriptor instead.
func (*ReqGetUserTrashBin) Descriptor() ([]byte, []int) {
	return file_transfer_proto_rawDescGZIP(), []int{28}
}

func (x *ReqGetUserTrashBin) GetSortObject() int32 {
	if x != nil {
		return x.SortObject
	}
	return 0
}

func (x *ReqGetUserTrashBin) GetSortType() int32 {
	if x != nil {
		return x.SortType
	}
	return 0
}

type RespGetUserTrashBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     int32             `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Total      int32             `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	FileObject []*FileMetaObject `protobuf:"bytes,3,rep,name=file_object,json=fileObject,proto3" json:"file_object,omitempty"`
	DirObject  []*DirMetaObject  `protobuf:"bytes,4,rep,name=dir_object,json=dirObject,proto3" json:"dir_object,omitempty"`
}

func (x *RespGetUserTrashBin) Reset() {
	*x = RespGetUserTrashBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transfer_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespGetUserTrashBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespGetUserTrashBin) ProtoMessage() {}

func (x *RespGetUserTrashBin) ProtoReflect() protoreflect.Message {
	mi := &file_transfer_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespGetUserTrashBin.ProtoReflect.Descriptor instead.
func (*RespGetUserTrashBin) Descriptor() ([]byte, []int) {
	return file_transfer_proto_rawDescGZIP(), []int{29}
}

func (x *RespGetUserTrashBin) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RespGetUserTrashBin) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *RespGetUserTrashBin) GetFileObject() []*FileMetaObject {
	if x != nil {
		return x.FileObject
	}
	return nil
}

func (x *RespGetUserTrashBin) GetDirObject() []*DirMetaObject {
	if x != nil {
		return x.DirObject
	}
	return nil
}

type ReqDeleteFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fid []int32 `protobuf:"varint,1,rep,packed,name=fid,proto3" json:"fid,omitempty"`
}

func (x *ReqDeleteFile) Reset() {
	*x = ReqDeleteFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transfer_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqDeleteFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqDeleteFile) ProtoMessage() {}

func (x *ReqDeleteFile) ProtoReflect() protoreflect.Message {
	mi := &file_transfer_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqDeleteFile.ProtoReflect.Descriptor instead.
func (*ReqDeleteFile) Descriptor() ([]byte, []int) {
	return file_transfer_proto_rawDescGZIP(), []int{30}
}

func (x *ReqDeleteFile) GetFid() []int32 {
	if x != nil {
		return x.Fid
	}
	return nil
}

type ReqDeleteDir struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Did []int32 `protobuf:"varint,1,rep,packed,name=did,proto3" json:"did,omitempty"`
}

func (x *ReqDeleteDir) Reset() {
	*x = ReqDeleteDir{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transfer_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqDeleteDir) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqDeleteDir) ProtoMessage() {}

func (x *ReqDeleteDir) ProtoReflect() protoreflect.Message {
	mi := &file_transfer_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqDeleteDir.ProtoReflect.Descriptor instead.
func (*ReqDeleteDir) Descriptor() ([]byte, []int) {
	return file_transfer_proto_rawDescGZIP(), []int{31}
}

func (x *ReqDeleteDir) GetDid() []int32 {
	if x != nil {
		return x.Did
	}
	return nil
}

type RespDelete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  bool   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RespDelete) Reset() {
	*x = RespDelete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transfer_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespDelete) ProtoMessage() {}

func (x *RespDelete) ProtoReflect() protoreflect.Message {
	mi := &file_transfer_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespDelete.ProtoReflect.Descriptor instead.
func (*RespDelete) Descriptor() ([]byte, []int) {
	return file_transfer_proto_rawDescGZIP(), []int{32}
}

func (x *RespDelete) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *RespDelete) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_transfer_proto protoreflect.FileDescriptor

var file_transfer_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0d, 0x74, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x23, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x46,
	0x69, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x03, 0x66, 0x69, 0x64, 0x22, 0x22, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x57, 0x69, 0x74, 0x68,
	0x44, 0x72, 0x61, 0x77, 0x44, 0x69, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x03, 0x64, 0x69, 0x64, 0x22, 0x40, 0x0a, 0x0c, 0x52, 0x65, 0x73,
	0x70, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72, 0x61, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x25, 0x0a, 0x11, 0x52,
	0x65, 0x71, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x54, 0x72, 0x61, 0x73, 0x68, 0x46, 0x69, 0x6c, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x03, 0x66,
	0x69, 0x64, 0x22, 0x42, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x70, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x54,
	0x72, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x24, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x43, 0x6c, 0x65,
	0x61, 0x6e, 0x54, 0x72, 0x61, 0x73, 0x68, 0x44, 0x69, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x03, 0x64, 0x69, 0x64, 0x22, 0x29, 0x0a, 0x0d,
	0x52, 0x65, 0x71, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x42, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x70, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x75, 0x0a, 0x09, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x75, 0x64, 0x69,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f,
	0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x64, 0x6f, 0x63, 0x12, 0x14, 0x0a, 0x05,
	0x6f, 0x74, 0x68, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x74, 0x68,
	0x65, 0x72, 0x22, 0x43, 0x0a, 0x0e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x65,
	0x6e, 0x73, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x34, 0x0a, 0x05, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x53, 0x74, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x75, 0x73, 0x65, 0x64, 0x22, 0x0f, 0x0a,
	0x0d, 0x52, 0x65, 0x71, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x22, 0xad,
	0x01, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x65, 0x6e, 0x73, 0x75,
	0x73, 0x12, 0x2a, 0x0a, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x74, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a,
	0x0a, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x74, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x52, 0x09, 0x66, 0x69, 0x6c,
	0x65, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x36, 0x0a, 0x07, 0x74, 0x6f, 0x70, 0x5f, 0x74, 0x65,
	0x6e, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x66, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x43, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x52, 0x06, 0x74, 0x6f, 0x70, 0x54, 0x65, 0x6e, 0x22, 0x23,
	0x0a, 0x0f, 0x52, 0x65, 0x71, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x66, 0x69, 0x64, 0x22, 0x41, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x66, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x5f, 0x53, 0x74, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x53, 0x74, 0x72, 0x22, 0x22, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x50, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x66, 0x69, 0x64, 0x22, 0x32, 0x0a, 0x0f, 0x52, 0x65,
	0x73, 0x70, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x74, 0x72, 0x22, 0x61,
	0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x61, 0x73,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x61, 0x73,
	0x68, 0x22, 0x52, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x27,
	0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74,
	0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x70, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x66, 0x69, 0x64, 0x22, 0x1f, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x66, 0x69, 0x64, 0x22, 0x5c, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x4a, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x63, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x2f, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x70, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x12, 0x21,
	0x0a, 0x0c, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x22, 0x91, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x65, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x72, 0x74,
	0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73,
	0x6f, 0x72, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x72,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x6f,
	0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0x95, 0x01, 0x0a, 0x0e, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x66, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x22, 0x75, 0x0a,
	0x0d, 0x44, 0x69, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x64, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x64, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x69, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x69, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x22, 0xc1, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x65, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3e, 0x0a, 0x0b, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x74, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x0a, 0x66, 0x69, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x3b, 0x0a, 0x0a, 0x64,
	0x69, 0x72, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x74, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x69, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x09, 0x64,
	0x69, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x52, 0x0a, 0x12, 0x52, 0x65, 0x71, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x72, 0x61, 0x73, 0x68, 0x42, 0x69, 0x6e, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x73, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xc1, 0x01, 0x0a,
	0x13, 0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x72, 0x61, 0x73,
	0x68, 0x42, 0x69, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x3e, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x66, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x3b, 0x0a, 0x0a, 0x64, 0x69, 0x72, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x66, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x09, 0x64, 0x69, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x22, 0x21, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x03,
	0x66, 0x69, 0x64, 0x22, 0x20, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x44, 0x69, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x03, 0x64, 0x69, 0x64, 0x22, 0x3e, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x70, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xac, 0x09, 0x0a, 0x08, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x12, 0x44, 0x0a, 0x0b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x18, 0x2e, 0x74, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x71, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x19, 0x2e, 0x74, 0x66,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0d, 0x44, 0x6f, 0x77, 0x6e,
	0x4c, 0x6f, 0x61, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1a, 0x2e, 0x74, 0x66, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x1b, 0x2e, 0x74, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0c, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x63, 0x12, 0x18, 0x2e, 0x74, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x1a, 0x19,
	0x2e, 0x74, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x65, 0x65, 0x12, 0x21,
	0x2e, 0x74, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x71, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x65,
	0x65, 0x1a, 0x22, 0x2e, 0x74, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x6c,
	0x65, 0x54, 0x72, 0x65, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1c, 0x2e, 0x74, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x1a, 0x19, 0x2e, 0x74, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x00,
	0x12, 0x45, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x72, 0x12, 0x1b, 0x2e,
	0x74, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x71, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x72, 0x1a, 0x19, 0x2e, 0x74, 0x66, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0c, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x12, 0x1e, 0x2e, 0x74, 0x66, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x1a, 0x1f, 0x2e, 0x74, 0x66, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0b, 0x50, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1d, 0x2e, 0x74, 0x66, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x50, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x46, 0x69, 0x6c, 0x65, 0x1a, 0x1e, 0x2e, 0x74, 0x66, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x50, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x46, 0x69, 0x6c, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0a, 0x46, 0x69,
	0x6c, 0x65, 0x43, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x12, 0x1c, 0x2e, 0x74, 0x66, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x46, 0x69, 0x6c, 0x65,
	0x43, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x1a, 0x1d, 0x2e, 0x74, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x43,
	0x65, 0x6e, 0x73, 0x75, 0x73, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1c, 0x2e, 0x74, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46,
	0x69, 0x6c, 0x65, 0x1a, 0x1d, 0x2e, 0x74, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x69,
	0x6c, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54,
	0x72, 0x61, 0x73, 0x68, 0x42, 0x69, 0x6e, 0x12, 0x21, 0x2e, 0x74, 0x66, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x72, 0x61, 0x73, 0x68, 0x42, 0x69, 0x6e, 0x1a, 0x22, 0x2e, 0x74, 0x66, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x72, 0x61, 0x73, 0x68, 0x42, 0x69, 0x6e, 0x22, 0x00,
	0x12, 0x53, 0x0a, 0x0e, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x54, 0x72, 0x61, 0x73, 0x68, 0x46, 0x69,
	0x6c, 0x65, 0x12, 0x20, 0x2e, 0x74, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x54, 0x72, 0x61, 0x73, 0x68,
	0x46, 0x69, 0x6c, 0x65, 0x1a, 0x1d, 0x2e, 0x74, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x54, 0x72,
	0x61, 0x73, 0x68, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0d, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x54, 0x72,
	0x61, 0x73, 0x68, 0x44, 0x69, 0x72, 0x12, 0x1f, 0x2e, 0x74, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x54,
	0x72, 0x61, 0x73, 0x68, 0x44, 0x69, 0x72, 0x1a, 0x1d, 0x2e, 0x74, 0x66, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x43, 0x6c, 0x65, 0x61,
	0x6e, 0x54, 0x72, 0x61, 0x73, 0x68, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0c, 0x57, 0x69, 0x74, 0x68,
	0x44, 0x72, 0x61, 0x77, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1e, 0x2e, 0x74, 0x66, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x57, 0x69, 0x74, 0x68,
	0x44, 0x72, 0x61, 0x77, 0x46, 0x69, 0x6c, 0x65, 0x1a, 0x1b, 0x2e, 0x74, 0x66, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x57, 0x69, 0x74,
	0x68, 0x44, 0x72, 0x61, 0x77, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0b, 0x57, 0x69, 0x74, 0x68, 0x44,
	0x72, 0x61, 0x77, 0x44, 0x69, 0x72, 0x12, 0x1d, 0x2e, 0x74, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72,
	0x61, 0x77, 0x44, 0x69, 0x72, 0x1a, 0x1b, 0x2e, 0x74, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x57, 0x69, 0x74, 0x68, 0x44, 0x72,
	0x61, 0x77, 0x22, 0x00, 0x42, 0x35, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x20, 0x70, 0x65, 0x61, 0x63, 0x68,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x50, 0x00, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_transfer_proto_rawDescOnce sync.Once
	file_transfer_proto_rawDescData = file_transfer_proto_rawDesc
)

func file_transfer_proto_rawDescGZIP() []byte {
	file_transfer_proto_rawDescOnce.Do(func() {
		file_transfer_proto_rawDescData = protoimpl.X.CompressGZIP(file_transfer_proto_rawDescData)
	})
	return file_transfer_proto_rawDescData
}

var file_transfer_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_transfer_proto_goTypes = []interface{}{
	(*ReqWithDrawFile)(nil),     // 0: tf.service.v1.ReqWithDrawFile
	(*ReqWithDrawDir)(nil),      // 1: tf.service.v1.ReqWithDrawDir
	(*RespWithDraw)(nil),        // 2: tf.service.v1.RespWithDraw
	(*ReqCleanTrashFile)(nil),   // 3: tf.service.v1.ReqCleanTrashFile
	(*RespCleanTrash)(nil),      // 4: tf.service.v1.RespCleanTrash
	(*ReqCleanTrashDir)(nil),    // 5: tf.service.v1.ReqCleanTrashDir
	(*ReqSearchFile)(nil),       // 6: tf.service.v1.ReqSearchFile
	(*RespSearchFile)(nil),      // 7: tf.service.v1.RespSearchFile
	(*FileRatio)(nil),           // 8: tf.service.v1.FileRatio
	(*DownloadCensus)(nil),      // 9: tf.service.v1.DownloadCensus
	(*Usage)(nil),               // 10: tf.service.v1.Usage
	(*ReqFileCensus)(nil),       // 11: tf.service.v1.ReqFileCensus
	(*RespFileCensus)(nil),      // 12: tf.service.v1.RespFileCensus
	(*ReqShareFileStr)(nil),     // 13: tf.service.v1.ReqShareFileStr
	(*RespShareFileStr)(nil),    // 14: tf.service.v1.RespShareFileStr
	(*ReqPreviewFile)(nil),      // 15: tf.service.v1.ReqPreviewFile
	(*RespPreviewFile)(nil),     // 16: tf.service.v1.RespPreviewFile
	(*File)(nil),                // 17: tf.service.v1.File
	(*ReqUpload)(nil),           // 18: tf.service.v1.ReqUpload
	(*RespUpload)(nil),          // 19: tf.service.v1.RespUpload
	(*ReqDownload)(nil),         // 20: tf.service.v1.ReqDownload
	(*RespDownload)(nil),        // 21: tf.service.v1.RespDownload
	(*ReqStatic)(nil),           // 22: tf.service.v1.ReqStatic
	(*RespStatic)(nil),          // 23: tf.service.v1.RespStatic
	(*ReqGetUserFileTree)(nil),  // 24: tf.service.v1.ReqGetUserFileTree
	(*FileMetaObject)(nil),      // 25: tf.service.v1.FileMetaObject
	(*DirMetaObject)(nil),       // 26: tf.service.v1.DirMetaObject
	(*RespGetUserFileTree)(nil), // 27: tf.service.v1.RespGetUserFileTree
	(*ReqGetUserTrashBin)(nil),  // 28: tf.service.v1.ReqGetUserTrashBin
	(*RespGetUserTrashBin)(nil), // 29: tf.service.v1.RespGetUserTrashBin
	(*ReqDeleteFile)(nil),       // 30: tf.service.v1.ReqDeleteFile
	(*ReqDeleteDir)(nil),        // 31: tf.service.v1.ReqDeleteDir
	(*RespDelete)(nil),          // 32: tf.service.v1.RespDelete
}
var file_transfer_proto_depIdxs = []int32{
	10, // 0: tf.service.v1.RespFileCensus.usage:type_name -> tf.service.v1.Usage
	8,  // 1: tf.service.v1.RespFileCensus.file_ratio:type_name -> tf.service.v1.FileRatio
	9,  // 2: tf.service.v1.RespFileCensus.top_ten:type_name -> tf.service.v1.DownloadCensus
	17, // 3: tf.service.v1.ReqUpload.file:type_name -> tf.service.v1.File
	25, // 4: tf.service.v1.RespGetUserFileTree.file_object:type_name -> tf.service.v1.FileMetaObject
	26, // 5: tf.service.v1.RespGetUserFileTree.dir_object:type_name -> tf.service.v1.DirMetaObject
	25, // 6: tf.service.v1.RespGetUserTrashBin.file_object:type_name -> tf.service.v1.FileMetaObject
	26, // 7: tf.service.v1.RespGetUserTrashBin.dir_object:type_name -> tf.service.v1.DirMetaObject
	18, // 8: tf.service.v1.Transfer.UploadEntry:input_type -> tf.service.v1.ReqUpload
	20, // 9: tf.service.v1.Transfer.DownLoadEntry:input_type -> tf.service.v1.ReqDownload
	22, // 10: tf.service.v1.Transfer.UploadStatic:input_type -> tf.service.v1.ReqStatic
	24, // 11: tf.service.v1.Transfer.GetUserFileTree:input_type -> tf.service.v1.ReqGetUserFileTree
	30, // 12: tf.service.v1.Transfer.DeleteFile:input_type -> tf.service.v1.ReqDeleteFile
	31, // 13: tf.service.v1.Transfer.DeleteDir:input_type -> tf.service.v1.ReqDeleteDir
	13, // 14: tf.service.v1.Transfer.ShareFileStr:input_type -> tf.service.v1.ReqShareFileStr
	15, // 15: tf.service.v1.Transfer.PreviewFile:input_type -> tf.service.v1.ReqPreviewFile
	11, // 16: tf.service.v1.Transfer.FileCensus:input_type -> tf.service.v1.ReqFileCensus
	6,  // 17: tf.service.v1.Transfer.SearchFile:input_type -> tf.service.v1.ReqSearchFile
	28, // 18: tf.service.v1.Transfer.GetUserTrashBin:input_type -> tf.service.v1.ReqGetUserTrashBin
	3,  // 19: tf.service.v1.Transfer.CleanTrashFile:input_type -> tf.service.v1.ReqCleanTrashFile
	5,  // 20: tf.service.v1.Transfer.CleanTrashDir:input_type -> tf.service.v1.ReqCleanTrashDir
	0,  // 21: tf.service.v1.Transfer.WithDrawFile:input_type -> tf.service.v1.ReqWithDrawFile
	1,  // 22: tf.service.v1.Transfer.WithDrawDir:input_type -> tf.service.v1.ReqWithDrawDir
	19, // 23: tf.service.v1.Transfer.UploadEntry:output_type -> tf.service.v1.RespUpload
	21, // 24: tf.service.v1.Transfer.DownLoadEntry:output_type -> tf.service.v1.RespDownload
	23, // 25: tf.service.v1.Transfer.UploadStatic:output_type -> tf.service.v1.RespStatic
	27, // 26: tf.service.v1.Transfer.GetUserFileTree:output_type -> tf.service.v1.RespGetUserFileTree
	32, // 27: tf.service.v1.Transfer.DeleteFile:output_type -> tf.service.v1.RespDelete
	32, // 28: tf.service.v1.Transfer.DeleteDir:output_type -> tf.service.v1.RespDelete
	14, // 29: tf.service.v1.Transfer.ShareFileStr:output_type -> tf.service.v1.RespShareFileStr
	16, // 30: tf.service.v1.Transfer.PreviewFile:output_type -> tf.service.v1.RespPreviewFile
	12, // 31: tf.service.v1.Transfer.FileCensus:output_type -> tf.service.v1.RespFileCensus
	7,  // 32: tf.service.v1.Transfer.SearchFile:output_type -> tf.service.v1.RespSearchFile
	29, // 33: tf.service.v1.Transfer.GetUserTrashBin:output_type -> tf.service.v1.RespGetUserTrashBin
	4,  // 34: tf.service.v1.Transfer.CleanTrashFile:output_type -> tf.service.v1.RespCleanTrash
	4,  // 35: tf.service.v1.Transfer.CleanTrashDir:output_type -> tf.service.v1.RespCleanTrash
	2,  // 36: tf.service.v1.Transfer.WithDrawFile:output_type -> tf.service.v1.RespWithDraw
	2,  // 37: tf.service.v1.Transfer.WithDrawDir:output_type -> tf.service.v1.RespWithDraw
	23, // [23:38] is the sub-list for method output_type
	8,  // [8:23] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_transfer_proto_init() }
func file_transfer_proto_init() {
	if File_transfer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_transfer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqWithDrawFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transfer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqWithDrawDir); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transfer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespWithDraw); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transfer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCleanTrashFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transfer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespCleanTrash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transfer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCleanTrashDir); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transfer_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSearchFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transfer_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespSearchFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transfer_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileRatio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transfer_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadCensus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transfer_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Usage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transfer_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqFileCensus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transfer_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespFileCensus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transfer_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqShareFileStr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transfer_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespShareFileStr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transfer_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqPreviewFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transfer_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespPreviewFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transfer_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transfer_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUpload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transfer_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespUpload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transfer_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqDownload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transfer_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespDownload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transfer_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqStatic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transfer_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespStatic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transfer_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetUserFileTree); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transfer_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileMetaObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transfer_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirMetaObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transfer_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespGetUserFileTree); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transfer_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetUserTrashBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transfer_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespGetUserTrashBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transfer_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqDeleteFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transfer_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqDeleteDir); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transfer_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespDelete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_transfer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_transfer_proto_goTypes,
		DependencyIndexes: file_transfer_proto_depIdxs,
		MessageInfos:      file_transfer_proto_msgTypes,
	}.Build()
	File_transfer_proto = out.File
	file_transfer_proto_rawDesc = nil
	file_transfer_proto_goTypes = nil
	file_transfer_proto_depIdxs = nil
}
